<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Bukkit中构建后自动打开服务端</title>
    <link href="/Bukkit%E4%B8%AD%E6%9E%84%E5%BB%BA%E5%90%8E%E8%87%AA%E5%8A%A8%E6%89%93%E5%BC%80%E6%9C%8D%E5%8A%A1%E7%AB%AF/"/>
    <url>/Bukkit%E4%B8%AD%E6%9E%84%E5%BB%BA%E5%90%8E%E8%87%AA%E5%8A%A8%E6%89%93%E5%BC%80%E6%9C%8D%E5%8A%A1%E7%AB%AF/</url>
    
    <content type="html"><![CDATA[<p>作为一个 Mod 开发者，自开发插件以来，一直在想一个问题：为什么插件开发不能一键调试呢？</p><p>终于，在一个风雨交加的夜晚，我忍无可忍，于是便有了本文。</p><div class="alert alert-danger"><i class="fa fa-bug  float-left"></i>  <p>注意：由于本人 Gradle 水平堪比学前班，所以不建议将本文内容视为最佳实践<br>本文仅适用于 IDEA，本人测试版本为 2023.1</p></div><h2 id="添加变量"><a href="#添加变量" class="headerlink" title="添加变量"></a>添加变量</h2><p>先在 <code>gradle.properties</code> 中添加两个变量：</p><ul><li><code>targetServerPath</code>     : 服务端所在的文件夹，比如 <code>D:\Server</code></li><li><code>targetServerJarName</code>  : 服务端的名称，比如 <code>xx-server.jar</code></li></ul><p>按照如上设置，本文提供的方法会查找 <code>D:\Server\xx-server.jar</code> 启动。</p><h2 id="复制构建产物至目标服务端的插件文件夹"><a href="#复制构建产物至目标服务端的插件文件夹" class="headerlink" title="复制构建产物至目标服务端的插件文件夹"></a>复制构建产物至目标服务端的插件文件夹</h2><p>在 <code>build.gradle</code> 中添加如下内容：</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs groovy">tasks.register(<span class="hljs-string">&#x27;copyArtifacts&#x27;</span>, Copy) &#123;<br>    from <span class="hljs-string">&#x27;build/libs&#x27;</span><br>    into <span class="hljs-string">&quot;$&#123;targetServerPath&#125;/plugins/&quot;</span><br>    include <span class="hljs-string">&#x27;**/*.jar&#x27;</span><br>&#125;<br></code></pre></td></tr></table></figure><h2 id="生成-runServer-运行配置"><a href="#生成-runServer-运行配置" class="headerlink" title="生成 runServer 运行配置"></a>生成 runServer 运行配置</h2><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><code class="hljs groovy"><span class="hljs-keyword">import</span> javax.xml.parsers.DocumentBuilder<br><span class="hljs-keyword">import</span> javax.xml.parsers.DocumentBuilderFactory<br><span class="hljs-keyword">import</span> javax.xml.transform.TransformerException<br><span class="hljs-keyword">import</span> javax.xml.transform.TransformerFactory<br><span class="hljs-keyword">import</span> javax.xml.transform.dom.DOMSource<br><span class="hljs-keyword">import</span> javax.xml.transform.stream.StreamResult<br><br><span class="hljs-keyword">static</span> <span class="hljs-type">void</span> createOption(document, parent, String name, String value) &#123;<br>    <span class="hljs-keyword">final</span> var option = document.createElement(<span class="hljs-string">&quot;option&quot;</span>);<br><br>    option.setAttribute(<span class="hljs-string">&quot;name&quot;</span>, name);<br>    option.setAttribute(<span class="hljs-string">&quot;value&quot;</span>, value);<br><br>    parent.appendChild(option)<br>&#125;<br><br>tasks.register(<span class="hljs-string">&#x27;createRunConfigurations&#x27;</span>) &#123;<br>    <span class="hljs-keyword">def</span> runConfigurationsDir = <span class="hljs-keyword">new</span> File(<span class="hljs-string">&quot;.idea/runConfigurations&quot;</span>)<br><br>    <span class="hljs-keyword">final</span> DocumentBuilderFactory docFactory = DocumentBuilderFactory.newInstance();<br>    <span class="hljs-keyword">final</span> DocumentBuilder docBuilder = docFactory.newDocumentBuilder();<br><br>    <span class="hljs-keyword">final</span> var javaDocument = docBuilder.newDocument();<br>    &#123;<br>        <span class="hljs-keyword">final</span> var rootElement = javaDocument.createElement(<span class="hljs-string">&quot;component&quot;</span>);<br>        &#123;<br>            <span class="hljs-keyword">final</span> var configuration = javaDocument.createElement(<span class="hljs-string">&quot;configuration&quot;</span>);<br>            &#123;<br>                configuration.setAttribute(<span class="hljs-string">&quot;default&quot;</span>, <span class="hljs-string">&quot;false&quot;</span>);<br>                configuration.setAttribute(<span class="hljs-string">&quot;name&quot;</span>, <span class="hljs-string">&quot;runServer&quot;</span>);<br>                configuration.setAttribute(<span class="hljs-string">&quot;type&quot;</span>, <span class="hljs-string">&quot;JarApplication&quot;</span>)<br><br>                createOption(javaDocument, configuration, <span class="hljs-string">&quot;JAR_PATH&quot;</span>, <span class="hljs-string">&quot;$&#123;targetServerPath&#125;/$&#123;targetServerJarName&#125;&quot;</span>)<br>                createOption(javaDocument, configuration, <span class="hljs-string">&quot;WORKING_DIRECTORY&quot;</span>, targetServerPath)<br><br>                var method = javaDocument.createElement(<span class="hljs-string">&quot;method&quot;</span>);<br>                &#123;<br>                    method.setAttribute(<span class="hljs-string">&quot;v&quot;</span>, <span class="hljs-string">&quot;1&quot;</span>)<br><br>                    var o1 = javaDocument.createElement(<span class="hljs-string">&quot;option&quot;</span>);<br><br>                    o1.setAttribute(<span class="hljs-string">&quot;name&quot;</span>, <span class="hljs-string">&quot;Gradle.BeforeRunTask&quot;</span>)<br>                    o1.setAttribute(<span class="hljs-string">&quot;enabled&quot;</span>, <span class="hljs-string">&quot;true&quot;</span>)<br>                    o1.setAttribute(<span class="hljs-string">&quot;tasks&quot;</span>, <span class="hljs-string">&quot;build&quot;</span>)<br>                    o1.setAttribute(<span class="hljs-string">&quot;externalProjectPath&quot;</span>, <span class="hljs-string">&quot;\$PROJECT_DIR\$&quot;</span>)<br>                    o1.setAttribute(<span class="hljs-string">&quot;vmOptions&quot;</span>, <span class="hljs-string">&quot;&quot;</span>)<br>                    o1.setAttribute(<span class="hljs-string">&quot;scriptParameters&quot;</span>, <span class="hljs-string">&quot;&quot;</span>)<br><br>                    method.appendChild(o1)<br><br>                    var o2 = javaDocument.createElement(<span class="hljs-string">&quot;option&quot;</span>);<br><br>                    o2.setAttribute(<span class="hljs-string">&quot;name&quot;</span>, <span class="hljs-string">&quot;Gradle.BeforeRunTask&quot;</span>)<br>                    o2.setAttribute(<span class="hljs-string">&quot;enabled&quot;</span>, <span class="hljs-string">&quot;true&quot;</span>)<br>                    o2.setAttribute(<span class="hljs-string">&quot;tasks&quot;</span>, <span class="hljs-string">&quot;copyArtifacts&quot;</span>)<br>                    o2.setAttribute(<span class="hljs-string">&quot;externalProjectPath&quot;</span>, <span class="hljs-string">&quot;\$PROJECT_DIR\$&quot;</span>)<br>                    o2.setAttribute(<span class="hljs-string">&quot;vmOptions&quot;</span>, <span class="hljs-string">&quot;&quot;</span>)<br>                    o2.setAttribute(<span class="hljs-string">&quot;scriptParameters&quot;</span>, <span class="hljs-string">&quot;&quot;</span>)<br><br>                    method.appendChild(o2)<br>                &#125;<br>                configuration.appendChild(method)<br>            &#125;<br>            rootElement.appendChild(configuration)<br>        &#125;<br>        javaDocument.appendChild(rootElement);<br>    &#125;<br><br>    <span class="hljs-keyword">final</span> TransformerFactory transformerFactory = TransformerFactory.newInstance();<br>    <span class="hljs-keyword">final</span> var transformer = transformerFactory.newTransformer();<br><br>    <span class="hljs-keyword">final</span> DOMSource source = <span class="hljs-keyword">new</span> DOMSource(javaDocument);<br>    <span class="hljs-keyword">final</span> File location = <span class="hljs-keyword">new</span> File(runConfigurationsDir, <span class="hljs-string">&quot;runServer.xml&quot;</span>);<br>    <span class="hljs-keyword">if</span> (!location.getParentFile().exists())<br>        location.getParentFile().mkdirs();<br>    <span class="hljs-keyword">final</span> StreamResult result = <span class="hljs-keyword">new</span> StreamResult(location);<br><br>    <span class="hljs-keyword">try</span> &#123;<br>        transformer.transform(source, result);<br>    &#125; <span class="hljs-keyword">catch</span> (TransformerException e) &#123;<br>        e.printStackTrace();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>该任务会生成一个 <code>JarApplication</code> 的配置文件，运行前会执行 <code>build</code> 与 <code>copyArtifacts</code> 两个 gradle 任务。</p>]]></content>
    
    
    
    <tags>
      
      <tag>Bukkit</tag>
      
      <tag>Gradle</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
